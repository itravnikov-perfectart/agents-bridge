#!/usr/bin/env node

import { command, run, string, option } from "cmd-ts"
import { runTask } from "./runner.js"

const app = command({
  name: "task-runner",
  description: "Roo Code Task Runner - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ–º–æ—â—å—é Roo Code",
  version: "0.0.0",
  args: {
    gitRepo: option({
      type: string,
      long: "git-repo",
      description: "URL git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
      env: "GIT_REPO_URL",
    }),
    gitToken: option({
      type: string,
      long: "git-token",
      description: "–¢–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é",
      env: "GIT_TOKEN",
    }),
    task: option({
      type: string,
      long: "task",
      description: "–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
      env: "TASK_TEXT",
    }),
    config: option({
      type: string,
      long: "config",
      description: "JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Roo Code (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
      env: "ROO_CONFIG_JSON",
    }),
  },
  handler: async (args) => {
    console.log("üöÄ –ó–∞–ø—É—Å–∫ Roo Code Task Runner...")
    
    try {
      await runTask({
        gitRepoUrl: args.gitRepo || "",
        gitToken: args.gitToken || "",
        taskText: args.task || "",
        rooConfig: args.config || "",
      })
      
      console.log("‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
      process.exit(0)
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:", error)
      process.exit(1)
    }
  },
})

run(app, process.argv.slice(2)) 